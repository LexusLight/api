name: Ayako workflow
on:
  push:
    paths:
      - 'ayako/*'
      - '.github/workflows/*'
jobs:
  lint:
    name: Lint code
    strategy:
      matrix:
        go-version: [1.13.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    env:
      working-directory: ./ayako
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}
      id: go

    - name: Setup env
      run: |
        echo "::set-env name=GOPATH::$(go env GOPATH)"
        echo "::add-path::$(go env GOPATH)/bin"
      shell: bash

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get dependencies
      run: make install
      working-directory: ${{env.working-directory}}

    - name: Lint
      run: make lint
      working-directory: ${{env.working-directory}}
    
  test:
    name: Unit test
    strategy:
      matrix:
        go-version: [1.13.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    env:
      working-directory: ./ayako
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}
      id: go

    - name: Setup env
      run: |
        echo "::set-env name=GOPATH::$(go env GOPATH)"
        echo "::add-path::$(go env GOPATH)/bin"
      shell: bash

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
        
    - name: Get dependencies
      run: make install
      working-directory: ${{env.working-directory}}
    
    - name: Run tests
      timeout-minutes: 10
      run: make test
      working-directory: ${{env.working-directory}}

    - name: Upload coverage report
      run: bash <(curl -s https://codecov.io/bash)

  build:
    name: Build cmds
    strategy:
      matrix:
        go-version: [1.13.x, ]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    env:
      working-directory: ./ayako
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
        id: go

      - name: Setup env
        run: |
          echo "::set-env name=GOPATH::$(go env GOPATH)"
          echo "::add-path::$(go env GOPATH)/bin"
        shell: bash

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get dependencies
        run: make install
        working-directory: ${{env.working-directory}}

      - name: Run build
        run: make build
        working-directory: ${{env.working-directory}}

      - name: Run docker build
        run: make docker-build
        working-directory: ${{env.working-directory}}
